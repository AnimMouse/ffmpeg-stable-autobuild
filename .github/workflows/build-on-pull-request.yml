name: Build FFmpeg on pull request
on:
  pull_request:
    branches:
      - master
      
env:
  ffmpeg_version: n4.3.1
  
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
          
      - name: Install dependencies
        run: ./dependencies.sh
        
      - name: Move ffmpeg-windows-build-helpers
        run: mv -v ./ffmpeg-windows-build-helpers/* ./
        
      - name: Cache sandbox
        uses: actions/cache@v2
        with:
          path: |
            sandbox
            !sandbox/**/*.exe
          key: sandbox-pull_request-${{ github.run_number }}
          restore-keys: |
            sandbox-pull_request-
            sandbox-
          
      - name: Compile FFmpeg using ffmpeg-windows-build-helpers
        run: ./cross_compile_ffmpeg.sh --ffmpeg-git-checkout-version=$ffmpeg_version --gcc-cpu-count=2 --disable-nonfree=n --sandbox-ok=y --compiler-flavors=win64
        
      - name: Upload FFmpeg win64 with FDK AAC
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-win64-nonfree
          path: sandbox/win64/ffmpeg_git_with_fdk_aac_${{ env.ffmpeg_version }}/ffmpeg.exe
          
      - name: Upload FFmpeg win64 GPL
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-win64-gpl
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/ffmpeg.exe
          
      - name: Upload FFplay win64 with FDK AAC
        uses: actions/upload-artifact@v2
        with:
          name: ffplay-win64-nonfree
          path: sandbox/win64/ffmpeg_git_with_fdk_aac_${{ env.ffmpeg_version }}/ffplay.exe
          
      - name: Upload FFplay win64 GPL
        uses: actions/upload-artifact@v2
        with:
          name: ffplay-win64-gpl
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/ffplay.exe
          
      - name: Upload FFmpeg win32 with FDK AAC
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-win32-nonfree
          path: sandbox/win32/ffmpeg_git_with_fdk_aac_${{ env.ffmpeg_version }}/ffmpeg.exe
          
      - name: Upload FFmpeg win32 GPL
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-win32-gpl
          path: sandbox/cross_compilers/mingw-w64-i686/i686-w64-mingw32/bin/ffmpeg.exe
          
      - name: Upload FFplay win32 with FDK AAC
        uses: actions/upload-artifact@v2
        with:
          name: ffplay-win32-nonfree
          path: sandbox/win32/ffmpeg_git_with_fdk_aac_${{ env.ffmpeg_version }}/ffplay.exe
          
      - name: Upload FFplay win32 GPL
        uses: actions/upload-artifact@v2
        with:
          name: ffplay-win32-gpl
          path: sandbox/cross_compilers/mingw-w64-i686/i686-w64-mingw32/bin/ffplay.exe
          
      - name: Upload x264 win64
        uses: actions/upload-artifact@v2
        with:
          name: x264-win64
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/x264.exe
          
      - name: Upload x264 win64 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x264-win64-all-bitdepth
          path: sandbox/win64/x264_all_bitdepth/x264.exe
          
      - name: Upload x265 win64
        uses: actions/upload-artifact@v2
        with:
          name: x265-win64
          path: sandbox/cross_compilers/mingw-w64-x86_64/x86_64-w64-mingw32/bin/x265.exe
          
      - name: Upload x265 win64 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x265-win64-all-bitdepth
          path: sandbox/win64/x265_all_bitdepth/8bit/x265.exe
          
      - name: Upload x264 win32
        uses: actions/upload-artifact@v2
        with:
          name: x264-win32
          path: sandbox/cross_compilers/mingw-w64-i686/i686-w64-mingw32/bin/x264.exe
          
      - name: Upload x264 win32 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x264-win32-all-bitdepth
          path: sandbox/win32/x264_all_bitdepth/x264.exe
          
      - name: Upload x265 win32
        uses: actions/upload-artifact@v2
        with:
          name: x265-win32
          path: sandbox/cross_compilers/mingw-w64-i686/i686-w64-mingw32/bin/x265.exe
          
      - name: Upload x265 win32 all bitdepth
        uses: actions/upload-artifact@v2
        with:
          name: x265-win32-all-bitdepth
          path: sandbox/win32/x265_all_bitdepth/8bit/x265.exe
          
  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download all builds
        uses: actions/download-artifact@v2
        
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "a#${{ github.run_number }}"
          release_name: "${{ env.ffmpeg_version }} Auto #${{ github.run_number }}"
          draft: false
          prerelease: true
          
      - name: Upload FFmpeg win64 with FDK AAC Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffmpeg-win64-nonfree/ffmpeg.exe
          asset_name: ffmpeg-win64-nonfree.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFmpeg win64 GPL Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffmpeg-win64-gpl/ffmpeg.exe
          asset_name: ffmpeg-win64-gpl.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFplay win64 with FDK AAC Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffplay-win64-nonfree/ffplay.exe
          asset_name: ffplay-win64-nonfree.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFplay win64 GPL Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffplay-win64-gpl/ffplay.exe
          asset_name: ffplay-win64-gpl.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFmpeg win32 with FDK AAC Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffmpeg-win32-nonfree/ffmpeg.exe
          asset_name: ffmpeg-win32-nonfree.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFmpeg win32 GPL Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffmpeg-win32-gpl/ffmpeg.exe
          asset_name: ffmpeg-win32-gpl.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFplay win32 with FDK AAC Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffplay-win32-nonfree/ffplay.exe
          asset_name: ffplay-win32-nonfree.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload FFplay win32 GPL Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffplay-win32-gpl/ffplay.exe
          asset_name: ffplay-win32-gpl.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x264 win64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x264-win64/x264.exe
          asset_name: x264-win64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x264 win64 all bitdepth Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x264-win64-all-bitdepth/x264.exe
          asset_name: x264-win64-all-bitdepth.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x265 win64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x265-win64/x265.exe
          asset_name: x265-win64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x265 win64 all bitdepth Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x265-win64-all-bitdepth/x265.exe
          asset_name: x265-win64-all-bitdepth.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x264 win32 Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x264-win32/x264.exe
          asset_name: x264-win32.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x264 win32 all bitdepth Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x264-win32-all-bitdepth/x264.exe
          asset_name: x264-win32-all-bitdepth.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x265 win32 Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x265-win32/x265.exe
          asset_name: x265-win32.exe
          asset_content_type: application/vnd.microsoft.portable-executable
          
      - name: Upload x265 win32 all bitdepth Release Asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: x265-win32-all-bitdepth/x265.exe
          asset_name: x265-win32-all-bitdepth.exe
          asset_content_type: application/vnd.microsoft.portable-executable